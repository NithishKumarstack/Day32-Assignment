                                MONGODB DAY-2 TASK


First We Have To Create DataBase 
Code: use guvi
      In guvi Name As DataBase Created

Let Now We Create Our Collection, In The Name Of Collection
Code: 
db.users.insertMany([
  {
    "user_id": 1,
    "name": "John Doe",
    "mentee_count": 10
  },
  {
    "user_id": 2,
    "name": "Nithish Kumar",
    "mentee_count": 20
  },
  {
    "user_id": 3,
    "name": "Rahul",
    "mentee_count": 10
  }
]);

db.codekata.insertMany([
  {
    "user_id": 1,
    "problems_solved": 20
  },
  {
    "user_id": 2,
    "problems_solved": 30
  },
  {
    "user_id": 3,
    "problems_solved": 10
  }
]);

db.attendance.insertMany([
  {
    "user_id": 1,
    "date": ISODate("2020-10-15"),
    "status": "present"
  },
  {
    "user_id": 2,
    "date": ISODate("2020-10-15"),
    "status": "present"
  },
  {
    "user_id": 3,
    "date": ISODate("2020-10-15"),
    "status": "absent"
  }
]);

db.topics.insertMany([
  {
    "name": "MongoDB Basics",
    "date": ISODate("2020-10-20")
  },
  {
    "name": "React Js",
    "date": ISODate("2020-10-25")
  },
  {
    "name": "Node Js",
    "date": ISODate("2020-10-30")
  }
]);

db.tasks.insertMany([
  {
    "user_id": 1,
    "task_id": 1,
    "date": ISODate("2020-10-20"),
    "submitted": true
  },
  {
    "user_id": 2,
    "task_id": 1,
    "date": ISODate("2020-10-25"),
    "submitted": true
  },
  {
    "user_id": 3,
    "task_id": 1,
    "date": ISODate("2020-10-30"),
    "submitted": false
  }
]);

db.company_drives.insertMany([
  {
    "drive_id": 1,
    "date": ISODate("2020-10-18"),
    "participants": [1, 2, 3]
  },
  {
    "drive_id": 2,
    "date": ISODate("2020-10-22"),
    "participants": [1, 2]
  },
  {
    "drive_id": 3,
    "date": ISODate("2020-10-25"),
    "participants": [1, 3]
  }
]);

db.mentors.insertMany([
  {
    "mentor_id": 1,
    "name": "Mentor A",
    "mentee_count": 20
  },
  {
    "mentor_id": 2,
    "name": "Mentor B",
    "mentee_count": 10
  },
  {
    "mentor_id": 3,
    "name": "Mentor C",
    "mentee_count": 15
  }
]);

Output: 
        {
  acknowledged: true,
  insertedIds: {
    '0': ObjectId("657ad611c9faca7d17e76bd0"),
    '1': ObjectId("657ad611c9faca7d17e76bd1"),
    '2': ObjectId("657ad611c9faca7d17e76bd2")
  }
}

{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId("657ae09d43a8e2d912c29c53"),
    '1': ObjectId("657ae09d43a8e2d912c29c54"),
    '2': ObjectId("657ae09d43a8e2d912c29c55")
  }
}

{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId("657ae1f743a8e2d912c29c56"),
    '1': ObjectId("657ae1f743a8e2d912c29c57"),
    '2': ObjectId("657ae1f743a8e2d912c29c58")
  }
}

Question 1: Find all the topics and tasks which are thought in the month of October?

Code: 
  // Find topics taught in October
db.topics.find({
  "date": {
    $gte: ISODate("2020-10-01"),
    $lt: ISODate("2020-11-01")
  }
});

// Find tasks submitted in October
db.tasks.find({
  "date": {
    $gte: ISODate("2020-10-01"),
    $lt: ISODate("2020-11-01")
  }
});

Output: 
       //topics
{
  _id: ObjectId("657add2a43a8e2d912c29c50"),
  name: 'MongoDB Basics',
  date: 2020-10-20T00:00:00.000Z
}
{
  _id: ObjectId("657add2a43a8e2d912c29c51"),
  name: 'React Js',
  date: 2020-10-25T00:00:00.000Z
}
{
  _id: ObjectId("657add2a43a8e2d912c29c52"),
  name: 'Node Js',
  date: 2020-10-30T00:00:00.000Z
}

     //tasks
{
  _id: ObjectId("657ae09d43a8e2d912c29c53"),
  user_id: 1,
  task_id: 1,
  date: 2020-10-20T00:00:00.000Z,
  submitted: true
}
{
  _id: ObjectId("657ae09d43a8e2d912c29c54"),
  user_id: 2,
  task_id: 1,
  date: 2020-10-25T00:00:00.000Z,
  submitted: true
}
{
  _id: ObjectId("657ae09d43a8e2d912c29c55"),
  user_id: 3,
  task_id: 1,
  date: 2020-10-30T00:00:00.000Z,
  submitted: false
}


Question 2: Find all the company drives which appeared between 15 oct-2020 and 31-oct-2020?

Code: 
    db.company_drives.find({
    "date": {
    $gte: ISODate("2020-10-15"),
    $lt: ISODate("2020-11-01")
  }
});

Output: 
{
  _id: ObjectId("657ae1f743a8e2d912c29c56"),
  drive_id: 1,
  date: 2020-10-18T00:00:00.000Z,
  participants: [
    1,
    2,
    3
  ]
}
{
  _id: ObjectId("657ae1f743a8e2d912c29c57"),
  drive_id: 2,
  date: 2020-10-22T00:00:00.000Z,
  participants: [
    1,
    2
  ]
}
{
  _id: ObjectId("657ae1f743a8e2d912c29c58"),
  drive_id: 3,
  date: 2020-10-25T00:00:00.000Z,
  participants: [
    1,
    3
  ]
}

Question 3: Find all the company drives and students who are appeared for the placement?

Code:
    db.company_drives.aggregate([
  {
    $lookup: {
      from: "users",
      localField: "participants",
      foreignField: "user_id",
      as: "participants_info"
    }
  },
  {
    $lookup: {
      from: "codekata",
      localField: "participants",
      foreignField: "user_id",
      as: "codekata_info"
    }
  },
  {
    $project: {
      "drive_id": 1,
      "date": 1,
      "participants_info.name": 1,
      "participants_info.mentee_count": 1,
      "codekata_info.problems_solved": 1
    }
  }
]);

Output: 
{
  _id: ObjectId("657ae39643a8e2d912c29c65"),
  drive_id: 1,
  date: 2020-10-18T00:00:00.000Z,
  participants_info: [
    {
      name: 'John Doe',
      mentee_count: 10
    },
    {
      name: 'Nithish Kumar',
      mentee_count: 20
    },
    {
      name: 'Rahul',
      mentee_count: 10
    }
  ],
  codekata_info: [
    {
      problems_solved: 20
    },
    {
      problems_solved: 30
    },
    {
      problems_solved: 10
    }
  ]
},
{
  _id: ObjectId("657ae39643a8e2d912c29c66"),
  drive_id: 2,
  date: 2020-10-22T00:00:00.000Z,
  participants_info: [
    {
      name: 'John Doe',
      mentee_count: 10
    },
    {
      name: 'Nithish Kumar',
      mentee_count: 20
    }
  ],
  codekata_info: [
    {
      problems_solved: 20
    },
    {
      problems_solved: 30
    }
  ]
},
{
  _id: ObjectId("657ae39643a8e2d912c29c67"),
  drive_id: 3,
  date: 2020-10-25T00:00:00.000Z,
  participants_info: [
    {
      name: 'John Doe',
      mentee_count: 10
    },
    {
      name: 'Rahul',
      mentee_count: 10
    }
  ],
  codekata_info: [
    {
      problems_solved: 20
    },
    {
      problems_solved: 10
    }
  ]
}

Question 4: Find the number of problems solved by the user in codekata?

Code: 
db.codekata.aggregate([
  {
    $group: {
      _id: "$user_id",
      total_problems_solved: { $sum: "$problems_solved" }
    }
  }
]);

Output: 
{
  _id: 1,
  total_problems_solved: 20
},
{
  _id: 2,
  total_problems_solved: 30
},
{
  _id: 3,
  total_problems_solved: 10
}

Question 5: Find all the mentors with who has the mentee's count more than 15?

Code: 
     db.mentors.aggregate([
  {
    $match: {
      mentee_count: { $gt: 15 }
    }
  }
]);


Output:
{
  _id: ObjectId("657ae34a43a8e2d912c29c62"),
  mentor_id: 1,
  name: 'Mentor A',
  mentee_count: 20
}

Question 6: Find the number of users who are absent and task is not submitted  between 15 oct-2020 and 31-oct-2020?

Code:
   db.attendance.aggregate([
  {
    $match: {
      date: {
        $gte: ISODate("2020-10-15"),
        $lt: ISODate("2020-11-01")
      },
      status: "absent"
    }
  },
  {
    $lookup: {
      from: "tasks",
      localField: "user_id",
      foreignField: "user_id",
      as: "task_info"
    }
  },
  {
    $match: {
      "task_info.submitted": false
    }
  },
  {
    $group: {
      _id: null,
      count: { $sum: 1 }
    }
  },
  {
    $project: {
      _id: 0,
      count: 1
    }
  }
]);


Output:
{
  count: 1
}